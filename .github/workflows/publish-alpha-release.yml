name: Tag and Publish Alpha

on: [push]

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: ðŸ›Ž Checkout repo
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: ðŸš§ Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Get previous tag.
        id: version
        run: |
          lastTag=`git tag -l --sort=-creatordate --format='%(refname:short)' | head -n 1`
          echo "::set-output name=tag::$lastTag"
      - name: Bump if alpha.
        id: bump-with-alpha
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: |
                const incoming = "${{steps.version.outputs.tag}}"
                console.log("Incoming Tag: " + incoming)
                if(incoming.includes('alpha')) {
                  const oldNum = incoming.match(/alpha[.]*(\d+)/)[1]
                  const newNum = parseInt(oldNum)+1
                  const newTag = incoming.replace(/alpha.*\d+/, `alpha.${newNum}`)
                  console.log("New Tag: " + newTag)
                  return newTag
                }
                else {
                  const splitLast = incoming.match(/(.*\.)(\d*)/)
                  console.log("splitLast: " + splitLast)
                  const newTag =splitLast[1] + (parseInt(splitLast[2])+1)+'-alpha.0'
                  console.log("New Tag: " + newTag)
                  return newTag
                }
      - name: Set NuGet version from alpha.
        run: |
          echo "NUGET_VERSION=${{steps.bump-with-alpha.outputs.result}}" >> $GITHUB_ENV
          echo "TAG_VERSION: ${{ env.NUGET_VERSION }}"
