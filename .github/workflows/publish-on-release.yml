name: Publish on Release

on:
  release:
    types:
      - published
  workflow_dispatch:
    
env:
  PROJECT_PATH: 'Pipeline.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  TAG_NAME: ${{ github.event.release.tag_name }}
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: ðŸ›Ž Checkout repo
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: ðŸš§ Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          
      - name: ðŸ”§ Restore nuget with dotnet
        run: dotnet restore ${{ env.PROJECT_PATH }}
      
      - name: ðŸ§± Build project
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release -p:Version=${{ env.TAG_NAME }}

      # create symbols package https://docs.microsoft.com/en-us/nuget/create-packages/symbol-packages-snupkg
      - name: ðŸ“¦ Create the package
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release -p:PackageVersion=${{ env.TAG_NAME }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
        
      - name: ðŸ’¿ Upload Artefacts
        uses: actions/upload-artifact@v1.0.0
        with:
          name: Pipeline-packages
          path: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
          
  push-github-packages:
    name: 'Publish GitHub Packages'
    needs: build
    if: github.event_name == 'release'
    runs-on: windows-latest
    steps:          
      - name: ðŸ’¾ Download Artefact
        uses: actions/download-artifact@v1
        with:
          name: 'Pipeline-packages'
      
      - name: ðŸ“‘ Dotnet NuGet Add Source
        run: dotnet nuget add source --username sonomirco --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/sonomirco/index.json"

      - name: ðŸš€ Publish the package
        run: dotnet nuget push .\Pipeline-packages\*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
        
  push-nuget:
    name: 'Publish NuGet Packages'
    needs: build
    if: github.event_name == 'release'
    environment:
      name: 'NuGet'
      url: https://www.nuget.org/packages/PipelineBasic
    runs-on: windows-latest
    steps:
      - name: ðŸ’¾ Download Artefact
        uses: actions/download-artifact@v1
        with:
          name: 'Pipeline-packages'
          
      - name: ðŸš€ Publish the package
        run: dotnet nuget push .\Pipeline-packages\*.nupkg --skip-duplicate -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.NUGET_SOURCE_URL }}
