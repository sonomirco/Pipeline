name: Publish on Release

on:
  release:
    types: [published]
    
env:
  PROJECT_PATH: 'Pipeline.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  TAG_NAME: ${{ github.event.release.tag_name }}

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: ðŸ›Ž Checkout repo
        uses: actions/checkout@v2
        with: 
          fetch-depth: 0

      - name: ðŸš§ Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      
      - name: ðŸ”§ Restore nuget with dotnet
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: ðŸ§± Build project
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release -p:PackageVersion=${{ github.event.release.tag_name }} -p:Version=${{ github.event.release.tag_name }}

      # create symbols package https://docs.microsoft.com/en-us/nuget/create-packages/symbol-packages-snupkg
      - name: ðŸ“¦ Create the package
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release -p:PackageVersion=${{ github.event.release.tag_name }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
        
      - name: ðŸ“‘ Dotnet NuGet Add Source
        run: dotnet nuget add source --username sonomirco --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/sonomirco/index.json"
    
      - name: ðŸš€ Publish the package
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
